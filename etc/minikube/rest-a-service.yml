apiVersion: apps/v1
kind: Deployment
metadata:
  name: rest-a-deployment
  labels:
    app: restA
    component: backend
    instance: restA
    name: restA
spec:
  replicas: 1
  selector:
    matchLabels:
      app: restA
      component: backend
      instance: restA
      name: restA
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: restA
        component: backend
        instance: restA
        name: restA
    spec:
      containers:
      - name: rest-a-container
        image: sample-service-a:0.0.1
        resources:
          limits:
            cpu: "2"
          requests:
            cpu: "2"
        imagePullPolicy: Never
        ports:
        - containerPort: 9990
        - containerPort: 8080
        # system probes
        startupProbe:
          httpGet:
            path: /health/started
            port: 9990
          initialDelaySeconds: 15  
          periodSeconds: 8
          failureThreshold: 50
        livenessProbe:
          httpGet:
            path: /health/live
            port: 9990
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 100
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 9990
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 10
---
apiVersion: v1
kind: Service
metadata:
  name: rest-a-service
  labels:
    app: restA
    component: backend
    instance: restA
    name: restA
spec:
  type: NodePort
  selector:
    app: restA
    component: backend
    instance: restA
    name: restA
  ports:
  - name: management
    protocol: TCP
    port: 9990
    targetPort: 9990
    nodePort: 31000
  - name: business
    protocol: TCP
    port: 8080
    targetPort: 8080
    nodePort: 32000
